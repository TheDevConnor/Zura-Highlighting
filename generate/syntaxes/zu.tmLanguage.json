{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Zura",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#operations"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#reserved-words"
    },
    {
      "include": "#builtin-types"
    },
    {
      "include": "#ctr-statements"
    },
    {
      "include": "#reserved-words2"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.az",
          "match": "//.*$"
        }
      ]
    },
    "operations": {
      "patterns": [
        {
          "name": "keyword.operator.az",
          "match": "\\b(&&|\\||\\|not|!|init|this|<-|->)\\b"
        },
        {
          "name": "keyword.operator.assignment.az",
          "match": "(?<!\\w):=",
          "captures": {
            "0": {
              "name": "punctuation.definition.reassignment.az"
            }
          }
        },
        {
          "name": "keyword.operator.assignment.az",
          "match": "=",
          "captures": {
            "0": {
              "name": "punctuation.definition.assignment.az"
            }
          }
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.az",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.az",
          "match": "\\\\."
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.az",
          "match": "\\b(\\d+(\\.\\d+)?)\\b"
        }
      ]
    },
    "ctr-statements": {
      "patterns": [
        {
          "match": "\\b(if|else|loop|for|match|include)\\b",
          "name": "keyword.operator.az"
        }
      ]
    },
    "reserved-words": {
      "patterns": [
        {
          "name": "entity.name.function.member.az",
          "match": "\\b(true|false|nil|return|break)\\b"
        },
        {
          "name": "storage.type.declaration-ident.az",
          "match": "\\b(class|fn|info|exit|input)\\b"
        },
        {
          "name": "storage.type.builtin-types.az",
          "match": "\\b(sin|cos|tan|asin|acos|atan|pi)\\b",
          "captures": {
            "0": {
              "name": "support.function.math.az"
            }
          }
        }
      ]
    },
    "reserved-words2": {
      "patterns": [
        {
          "name": "storage.type.declaration-ident.az",
          "match": "\\b(have|case|default|class|extends)\\b",
          "foreground": "#FF00FF"
        },
        {
          "name": "variable.other.declaration-az",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*:?=)",
          "captures": {
            "1": {
              "name": "variable.other.declaration-az.name"
            }
          }
        }
      ]
    },
    "builtin-types": {
      "patterns": [
        {
          "name": "storage.type.builtin-types.az",
          "match": "\\b(clock)\\b"
        }
      ]
    }
  },
  "colors": {
    "math": "#FF00FF",
    "keyword.operator.assignment.az": "#FF0000",
    "storage.type.declaration-ident.az": "#0072C6",
    "storage.type.builtin-types.az": "#8c1aff"
  },
  "scopeName": "source.zu"
}
